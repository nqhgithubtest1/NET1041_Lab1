@model ProductFilterViewModel

@{
    ViewData["Title"] = "Product List";
}

<h1>Product List</h1>

<p>
    <a asp-action="Create" class="btn btn-sm btn-primary">Create New</a>
</p>

<br />

<form id="searchForm" method="get" action="@Url.Action("Index", "Products")" class="mb-4 p-3 border rounded">
    <div class="form-row mb-3">
        <div class="col">
            <label for="Keyword">Search:</label>
            <input type="text" id="Keyword" name="Keyword" value="@Model.Keyword" placeholder="Product name" class="form-control" />
        </div>
    </div>

    <div class="form-row mb-3">
        <div class="col-md-6">
            <label for="PriceFrom">Price from:</label>
            <input type="number" id="PriceFrom" name="PriceFrom" value="@Model.PriceFrom" class="form-control" />
        </div>
        <div class="col-md-6">
            <label for="PriceTo">to:</label>
            <input type="number" id="PriceTo" name="PriceTo" value="@Model.PriceTo" class="form-control" />
        </div>
    </div>

    <div class="form-row mb-3">
        <div class="col-md-6">
            <label for="SortBy">Sort by:</label>
            @Html.DropDownList("SortBy", (IEnumerable<SelectListItem>)ViewBag.SortByOptions, "Select attribute to sort by", new { @class = "form-control", @id = "SortBy" })
        </div>
        <div class="col-md-6">
            <label for="SortOrder">Order:</label>
            @Html.DropDownList("SortOrder", (IEnumerable<SelectListItem>)ViewBag.SortOrderOptions, "Select order", new { @class = "form-control", @id = "SortOrder" })
        </div>
    </div>

    <div class="form-group text-center">
        <button type="submit" class="btn btn-primary">Apply</button>
        <button type="submit" class="btn btn-secondary" onclick="clearForm()">Clear</button>
    </div>
</form>

@if (Model.Products != null && Model.Products.Any())
{
    <table class="table table-striped table-bordered table-hover">
        <thead class="thead-dark">
            <tr>
                <th>@Html.DisplayNameFor(model => model.Products.First().ProductName)</th>
                <th>@Html.DisplayNameFor(model => model.Products.First().Price)</th>
                <th>@Html.DisplayNameFor(model => model.Products.First().Quantity)</th>
                <th>@Html.DisplayNameFor(model => model.Products.First().Brand)</th>
                <th>@Html.DisplayNameFor(model => model.Products.First().Model)</th>
                <th>@Html.DisplayNameFor(model => model.Products.First().ManufactureDate)</th>
                <th>@Html.DisplayNameFor(model => model.Products.First().ExpirationDate)</th>
                <th>@Html.DisplayNameFor(model => model.Products.First().Rating)</th>
                <th>@Html.DisplayNameFor(model => model.Products.First().IsAvailable)</th>
                <th>@Html.DisplayNameFor(model => model.Products.First().CreatedDate)</th>
                <th>@Html.DisplayNameFor(model => model.Products.First().UpdatedDate)</th>
                <th>Category</th>
                <th class="text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Products)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.ProductName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Price)</td>
                    <td>@Html.DisplayFor(modelItem => item.Quantity)</td>
                    <td>@Html.DisplayFor(modelItem => item.Brand)</td>
                    <td>@Html.DisplayFor(modelItem => item.Model)</td>
                    <td>@Html.DisplayFor(modelItem => item.ManufactureDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.ExpirationDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.Rating)</td>
                    <td>@Html.DisplayFor(modelItem => item.IsAvailable)</td>
                    <td>@Html.DisplayFor(modelItem => item.CreatedDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.UpdatedDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.Category.CategoryName)</td>
                    <td class="text-center">
                        <a asp-action="Edit" asp-route-id="@item.ProductId" class="btn btn-sm btn-warning">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.ProductId" class="btn btn-sm btn-info">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.ProductId" class="btn btn-sm btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No products found.</p>
}

<!-- Pagination with Bootstrap -->
@if (ViewBag.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", "Products", new { page = i, Model.Keyword, Model.PriceFrom, Model.PriceTo, Model.SortBy, Model.SortOrder })">
                        @i
                    </a>
                </li>
            }
        </ul>
    </nav>
}

<script>
    function clearForm() {
        document.getElementById("searchForm").reset();

        document.getElementById("Keyword").value = "";
        document.getElementById("PriceFrom").value = "";
        document.getElementById("PriceTo").value = "";
        document.getElementById("SortBy").selectedIndex = 0;
        document.getElementById("SortOrder").selectedIndex = 0;
    }
</script>